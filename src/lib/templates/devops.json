{
  "name": "DevOps",
  "description": "DevOps tools and infrastructure management",
  "commands": [
    {
      "id": "docker-build",
      "name": "Build Docker Image",
      "command": "docker build -t [image_name] .",
      "inputs": {
        "image_name": "myapp"
      },
      "hotkey": "Ctrl+Shift+B",
      "icon": "üê≥",
      "description": "Builds a Docker image from the current directory. Docker is a platform for developing, shipping, and running applications in containers. This command creates an image that can be run consistently across different environments."
    },
    {
      "id": "docker-run",
      "name": "Run Docker Container",
      "command": "docker run -d -p [host_port]:[container_port] --name [container_name] [image_name]",
      "inputs": {
        "host_port": "3000",
        "container_port": "3000",
        "container_name": "myapp-container",
        "image_name": "myapp"
      },
      "hotkey": "Ctrl+Shift+R",
      "icon": "‚ñ∂Ô∏è",
      "description": "Runs a Docker container in detached mode. The -d flag runs the container in the background, -p maps ports between host and container, and --name assigns a custom name to the container."
    },
    {
      "id": "docker-stop",
      "name": "Stop Docker Container",
      "command": "docker stop [container_name]",
      "inputs": {
        "container_name": "myapp-container"
      },
      "hotkey": "Ctrl+Shift+S",
      "icon": "‚èπÔ∏è",
      "description": "Stops a running Docker container gracefully. This sends a SIGTERM signal to the main process in the container, allowing it to shut down properly."
    },
    {
      "id": "docker-ps",
      "name": "List Docker Containers",
      "command": "docker ps -a",
      "hotkey": "Ctrl+Shift+L",
      "icon": "üìã",
      "description": "Lists all Docker containers (running and stopped). The -a flag shows all containers, including those that are not currently running."
    },
    {
      "id": "docker-logs",
      "name": "View Docker Logs",
      "command": "docker logs [container_name]",
      "inputs": {
        "container_name": "myapp-container"
      },
      "hotkey": "Ctrl+Shift+G",
      "icon": "üìÑ",
      "description": "Shows the logs from a Docker container. Useful for debugging and monitoring application output. Add -f flag to follow logs in real-time."
    },
    {
      "id": "docker-compose-up",
      "name": "Start Docker Compose",
      "command": "docker-compose up -d",
      "hotkey": "Ctrl+Shift+U",
      "icon": "üöÄ",
      "description": "Starts all services defined in docker-compose.yml file. Docker Compose allows you to define and run multi-container applications. The -d flag runs in detached mode."
    },
    {
      "id": "docker-compose-down",
      "name": "Stop Docker Compose",
      "command": "docker-compose down",
      "hotkey": "Ctrl+Shift+D",
      "icon": "üõë",
      "description": "Stops and removes all containers, networks, and volumes created by docker-compose up. This cleans up the entire application stack."
    },
    {
      "id": "kubectl-get-pods",
      "name": "List Kubernetes Pods",
      "command": "kubectl get pods",
      "hotkey": "Ctrl+Shift+P",
      "icon": "‚ò∏Ô∏è",
      "description": "Lists all pods in the current Kubernetes namespace. Kubernetes is an open-source container orchestration platform for automating deployment, scaling, and management of containerized applications."
    },
    {
      "id": "kubectl-get-services",
      "name": "List Kubernetes Services",
      "command": "kubectl get services",
      "hotkey": "Ctrl+Shift+V",
      "icon": "üîó",
      "description": "Lists all services in the current Kubernetes namespace. Services provide a stable IP address and DNS name for a set of pods, enabling load balancing and service discovery."
    },
    {
      "id": "kubectl-apply",
      "name": "Apply Kubernetes Config",
      "command": "kubectl apply -f [config_file]",
      "inputs": {
        "config_file": "deployment.yaml"
      },
      "hotkey": "Ctrl+Shift+A",
      "icon": "üìù",
      "description": "Applies a Kubernetes configuration file to create or update resources. This is the declarative way to manage Kubernetes resources using YAML or JSON files."
    },
    {
      "id": "kubectl-delete",
      "name": "Delete Kubernetes Resource",
      "command": "kubectl delete -f [config_file]",
      "inputs": {
        "config_file": "deployment.yaml"
      },
      "hotkey": "Ctrl+Shift+X",
      "icon": "üóëÔ∏è",
      "description": "Deletes Kubernetes resources defined in a configuration file. This removes the resources from the cluster based on the specifications in the file."
    },
    {
      "id": "kubectl-logs",
      "name": "View Kubernetes Logs",
      "command": "kubectl logs [pod_name]",
      "inputs": {
        "pod_name": "myapp-pod"
      },
      "hotkey": "Ctrl+Shift+G",
      "icon": "üìÑ",
      "description": "Shows the logs from a Kubernetes pod. Useful for debugging applications running in Kubernetes clusters. Add -f flag to follow logs in real-time."
    },
    {
      "id": "terraform-init",
      "name": "Initialize Terraform",
      "command": "terraform init",
      "hotkey": "Ctrl+Shift+I",
      "icon": "üèóÔ∏è",
      "description": "Initializes a Terraform working directory. Terraform is an infrastructure as code tool that lets you define and provision infrastructure using declarative configuration files."
    },
    {
      "id": "terraform-plan",
      "name": "Plan Terraform Changes",
      "command": "terraform plan",
      "hotkey": "Ctrl+Shift+P",
      "icon": "üìã",
      "description": "Creates an execution plan for Terraform. This shows what Terraform will do when you apply the configuration, without making any actual changes to your infrastructure."
    },
    {
      "id": "terraform-apply",
      "name": "Apply Terraform Changes",
      "command": "terraform apply",
      "hotkey": "Ctrl+Shift+A",
      "icon": "‚úÖ",
      "description": "Applies the Terraform configuration to create or update infrastructure. This will prompt for confirmation before making changes to your infrastructure."
    },
    {
      "id": "terraform-destroy",
      "name": "Destroy Terraform Infrastructure",
      "command": "terraform destroy",
      "hotkey": "Ctrl+Shift+X",
      "icon": "üí•",
      "description": "Destroys all resources managed by Terraform. This will permanently delete all infrastructure created by the Terraform configuration. Use with caution!"
    },
    {
      "id": "ansible-playbook",
      "name": "Run Ansible Playbook",
      "command": "ansible-playbook [playbook.yml]",
      "inputs": {
        "playbook.yml": "deploy.yml"
      },
      "hotkey": "Ctrl+Shift+R",
      "icon": "üîß",
      "description": "Runs an Ansible playbook. Ansible is an automation tool for configuration management, application deployment, and task automation. Playbooks are written in YAML format."
    },
    {
      "id": "ansible-ping",
      "name": "Test Ansible Connection",
      "command": "ansible all -m ping",
      "hotkey": "Ctrl+Shift+T",
      "icon": "üèì",
      "description": "Tests connectivity to all hosts in the Ansible inventory. This is a simple way to verify that Ansible can reach and authenticate with your target servers."
    },
    {
      "id": "jenkins-build",
      "name": "Trigger Jenkins Build",
      "command": "curl -X POST [jenkins_url]/job/[job_name]/build",
      "inputs": {
        "jenkins_url": "http://localhost:8080",
        "job_name": "myapp"
      },
      "hotkey": "Ctrl+Shift+J",
      "icon": "ü§ñ",
      "description": "Triggers a Jenkins build job via REST API. Jenkins is an open-source automation server that helps automate the parts of software development related to building, testing, and deploying."
    },
    {
      "id": "gitlab-ci-run",
      "name": "Run GitLab CI Pipeline",
      "command": "gitlab-ci-local",
      "hotkey": "Ctrl+Shift+G",
      "icon": "ü¶ä",
      "description": "Runs GitLab CI pipeline locally for testing. This allows you to test your CI/CD pipeline before pushing to GitLab, helping catch issues early in development."
    },
    {
      "id": "helm-install",
      "name": "Install Helm Chart",
      "command": "helm install [release_name] [chart_name]",
      "inputs": {
        "release_name": "myapp",
        "chart_name": "stable/nginx"
      },
      "hotkey": "Ctrl+Shift+H",
      "icon": "‚öì",
      "description": "Installs a Helm chart into a Kubernetes cluster. Helm is a package manager for Kubernetes that simplifies the deployment and management of applications."
    },
    {
      "id": "helm-upgrade",
      "name": "Upgrade Helm Release",
      "command": "helm upgrade [release_name] [chart_name]",
      "inputs": {
        "release_name": "myapp",
        "chart_name": "stable/nginx"
      },
      "hotkey": "Ctrl+Shift+U",
      "icon": "‚¨ÜÔ∏è",
      "description": "Upgrades an existing Helm release to a new version or configuration. This allows you to update applications deployed via Helm without losing data."
    },
    {
      "id": "helm-list",
      "name": "List Helm Releases",
      "command": "helm list",
      "hotkey": "Ctrl+Shift+L",
      "icon": "üìã",
      "description": "Lists all Helm releases in the current namespace. Shows the name, namespace, revision, status, and chart of each deployed release."
    },
    {
      "id": "prometheus-status",
      "name": "Check Prometheus Status",
      "command": "curl [prometheus_url]/api/v1/status/targets",
      "inputs": {
        "prometheus_url": "http://localhost:9090"
      },
      "hotkey": "Ctrl+Shift+M",
      "icon": "üìä",
      "description": "Checks the status of Prometheus monitoring targets. Prometheus is an open-source monitoring and alerting toolkit designed for reliability and scalability."
    },
    {
      "id": "grafana-dashboard",
      "name": "Open Grafana Dashboard",
      "command": "open [grafana_url]",
      "inputs": {
        "grafana_url": "http://localhost:3000"
      },
      "hotkey": "Ctrl+Shift+G",
      "icon": "üìà",
      "description": "Opens Grafana dashboard in the default browser. Grafana is an open-source analytics and monitoring solution for databases, time series metrics, and log analytics."
    },
    {
      "id": "vault-status",
      "name": "Check Vault Status",
      "command": "vault status",
      "hotkey": "Ctrl+Shift+V",
      "icon": "üîê",
      "description": "Checks the status of HashiCorp Vault. Vault is a tool for securely accessing secrets, managing sensitive data, and providing encryption as a service."
    },
    {
      "id": "consul-members",
      "name": "List Consul Members",
      "command": "consul members",
      "hotkey": "Ctrl+Shift+C",
      "icon": "ü§ù",
      "description": "Lists all members of the Consul cluster. Consul is a service mesh solution providing service discovery, configuration, and segmentation functionality."
    },
    {
      "id": "nomad-status",
      "name": "Check Nomad Status",
      "command": "nomad server members",
      "hotkey": "Ctrl+Shift+N",
      "icon": "üöÄ",
      "description": "Checks the status of Nomad cluster members. Nomad is a flexible workload orchestrator that can deploy and manage containers, virtual machines, and standalone applications."
    },
    {
      "id": "packer-build",
      "name": "Build Packer Image",
      "command": "packer build [template.json]",
      "inputs": {
        "template.json": "aws-ami.json"
      },
      "hotkey": "Ctrl+Shift+B",
      "icon": "üì¶",
      "description": "Builds a machine image using Packer. Packer is a tool for creating identical machine images for multiple platforms from a single source configuration."
    },
    {
      "id": "vagrant-up",
      "name": "Start Vagrant VM",
      "command": "vagrant up",
      "hotkey": "Ctrl+Shift+U",
      "icon": "üñ•Ô∏è",
      "description": "Starts and provisions the Vagrant environment. Vagrant is a tool for building and managing virtual machine environments in a single workflow."
    },
    {
      "id": "vagrant-destroy",
      "name": "Destroy Vagrant VM",
      "command": "vagrant destroy -f",
      "hotkey": "Ctrl+Shift+X",
      "icon": "üí•",
      "description": "Stops and deletes all traces of the Vagrant machine. The -f flag forces the destruction without confirmation prompts."
    },
    {
      "id": "ssh-connect",
      "name": "SSH Connect",
      "command": "ssh [user]@[host]",
      "inputs": {
        "user": "ubuntu",
        "host": "192.168.1.100"
      },
      "hotkey": "Ctrl+Shift+S",
      "icon": "üîó",
      "description": "Connects to a remote server via SSH. SSH (Secure Shell) provides secure remote access to servers and enables secure file transfers and command execution."
    },
    {
      "id": "ssh-keygen",
      "name": "Generate SSH Key",
      "command": "ssh-keygen -t rsa -b 4096 -C [email]",
      "inputs": {
        "email": "user@example.com"
      },
      "hotkey": "Ctrl+Shift+K",
      "icon": "üîë",
      "description": "Generates a new SSH key pair for secure authentication. RSA keys with 4096 bits provide strong security for server access without password authentication."
    },
    {
      "id": "ssh-copy-id",
      "name": "Copy SSH Key to Server",
      "command": "ssh-copy-id [user]@[host]",
      "inputs": {
        "user": "ubuntu",
        "host": "192.168.1.100"
      },
      "hotkey": "Ctrl+Shift+C",
      "icon": "üìã",
      "description": "Copies the local SSH public key to a remote server for passwordless authentication. This enables secure login without entering passwords each time."
    },
    {
      "id": "scp-upload",
      "name": "SCP Upload File",
      "command": "scp [local_file] [user]@[host]:[remote_path]",
      "inputs": {
        "local_file": "app.tar.gz",
        "user": "ubuntu",
        "host": "192.168.1.100",
        "remote_path": "/home/ubuntu/"
      },
      "hotkey": "Ctrl+Shift+U",
      "icon": "üì§",
      "description": "Uploads a file to a remote server using SCP (Secure Copy Protocol). SCP provides secure file transfer over SSH connection with encryption."
    },
    {
      "id": "scp-download",
      "name": "SCP Download File",
      "command": "scp [user]@[host]:[remote_file] [local_path]",
      "inputs": {
        "user": "ubuntu",
        "host": "192.168.1.100",
        "remote_file": "/var/log/app.log",
        "local_path": "./logs/"
      },
      "hotkey": "Ctrl+Shift+D",
      "icon": "üì•",
      "description": "Downloads a file from a remote server using SCP. Useful for retrieving logs, configuration files, or any data from remote systems securely."
    },
    {
      "id": "rsync-sync",
      "name": "Rsync Directory",
      "command": "rsync -avz [source] [user]@[host]:[destination]",
      "inputs": {
        "source": "./app/",
        "user": "ubuntu",
        "host": "192.168.1.100",
        "destination": "/var/www/app/"
      },
      "hotkey": "Ctrl+Shift+R",
      "icon": "üîÑ",
      "description": "Synchronizes directories between local and remote systems using rsync. Rsync efficiently transfers only changed files and supports compression for faster transfers."
    },
    {
      "id": "rsync-backup",
      "name": "Rsync Backup",
      "command": "rsync -avz --delete [source] [backup_path]",
      "inputs": {
        "source": "/var/www/app/",
        "backup_path": "/backup/app/"
      },
      "hotkey": "Ctrl+Shift+B",
      "icon": "üíæ",
      "description": "Creates a backup using rsync with mirroring. The --delete flag removes files in destination that don't exist in source, ensuring exact backup."
    },
    {
      "id": "telnet-test",
      "name": "Test Port with Telnet",
      "command": "telnet [host] [port]",
      "inputs": {
        "host": "192.168.1.100",
        "port": "22"
      },
      "hotkey": "Ctrl+Shift+T",
      "icon": "üîå",
      "description": "Tests network connectivity to a specific port using telnet. Useful for checking if services are running and ports are accessible on remote systems."
    },
    {
      "id": "nc-listen",
      "name": "Netcat Listen",
      "command": "nc -l [port]",
      "inputs": {
        "port": "8080"
      },
      "hotkey": "Ctrl+Shift+L",
      "icon": "üëÇ",
      "description": "Starts a netcat listener on a specific port. Netcat is a versatile networking utility for reading/writing data across network connections."
    },
    {
      "id": "nc-connect",
      "name": "Netcat Connect",
      "command": "nc [host] [port]",
      "inputs": {
        "host": "192.168.1.100",
        "port": "8080"
      },
      "hotkey": "Ctrl+Shift+C",
      "icon": "üîó",
      "description": "Connects to a remote host and port using netcat. Useful for testing network services, debugging connections, or creating simple client-server communication."
    },
    {
      "id": "curl-get",
      "name": "Curl GET Request",
      "command": "curl -X GET [url]",
      "inputs": {
        "url": "http://api.example.com/status"
      },
      "hotkey": "Ctrl+Shift+G",
      "icon": "üåê",
      "description": "Makes a GET request to a URL using curl. Curl is a command-line tool for transferring data with various protocols including HTTP, HTTPS, FTP, and more."
    },
    {
      "id": "curl-post",
      "name": "Curl POST Request",
      "command": "curl -X POST -H 'Content-Type: application/json' -d '[data]' [url]",
      "inputs": {
        "data": "{\"key\": \"value\"}",
        "url": "http://api.example.com/data"
      },
      "hotkey": "Ctrl+Shift+P",
      "icon": "üì§",
      "description": "Makes a POST request with JSON data using curl. Useful for testing APIs, sending data to web services, or automating HTTP requests."
    },
    {
      "id": "wget-download",
      "name": "Wget Download",
      "command": "wget [url]",
      "inputs": {
        "url": "https://example.com/file.zip"
      },
      "hotkey": "Ctrl+Shift+W",
      "icon": "‚¨áÔ∏è",
      "description": "Downloads a file from a URL using wget. Wget is a free utility for non-interactive downloading of files from the web with support for recursive downloads."
    },
    {
      "id": "ping-test",
      "name": "Ping Host",
      "command": "ping [host]",
      "inputs": {
        "host": "8.8.8.8"
      },
      "hotkey": "Ctrl+Shift+P",
      "icon": "üèì",
      "description": "Tests network connectivity to a host using ping. Ping sends ICMP echo requests to measure round-trip time and packet loss for network troubleshooting."
    },
    {
      "id": "traceroute",
      "name": "Traceroute",
      "command": "traceroute [host]",
      "inputs": {
        "host": "google.com"
      },
      "hotkey": "Ctrl+Shift+T",
      "icon": "üõ£Ô∏è",
      "description": "Traces the network path to a destination host. Traceroute shows each hop along the route, helping identify network bottlenecks and routing issues."
    },
    {
      "id": "nslookup",
      "name": "DNS Lookup",
      "command": "nslookup [domain]",
      "inputs": {
        "domain": "example.com"
      },
      "hotkey": "Ctrl+Shift+N",
      "icon": "üîç",
      "description": "Performs DNS lookup to resolve domain names to IP addresses. Nslookup is a network administration tool for querying DNS servers and troubleshooting DNS issues."
    },
    {
      "id": "dig-query",
      "name": "Dig DNS Query",
      "command": "dig [domain]",
      "inputs": {
        "domain": "example.com"
      },
      "hotkey": "Ctrl+Shift+D",
      "icon": "üîç",
      "description": "Performs detailed DNS queries using dig. Dig provides comprehensive DNS information including A, MX, CNAME records and is useful for DNS troubleshooting."
    },
    {
      "id": "netstat-connections",
      "name": "Netstat Active Connections",
      "command": "netstat -tuln",
      "hotkey": "Ctrl+Shift+N",
      "icon": "üìä",
      "description": "Shows active network connections and listening ports. Netstat displays network statistics including TCP/UDP connections, routing tables, and interface statistics."
    },
    {
      "id": "ss-sockets",
      "name": "SS Socket Info",
      "command": "ss -tuln",
      "hotkey": "Ctrl+Shift+S",
      "icon": "üîå",
      "description": "Shows socket statistics using ss (socket statistics). SS is a modern replacement for netstat that provides detailed information about network sockets and connections."
    },
    {
      "id": "iftop-traffic",
      "name": "Monitor Network Traffic",
      "command": "sudo iftop",
      "hotkey": "Ctrl+Shift+M",
      "icon": "üìà",
      "description": "Monitors network traffic in real-time using iftop. Iftop displays bandwidth usage on an interface by host connection, useful for identifying bandwidth hogs."
    },
    {
      "id": "tcpdump-capture",
      "name": "Tcpdump Capture",
      "command": "sudo tcpdump -i [interface] -w [file.pcap]",
      "inputs": {
        "interface": "eth0",
        "file.pcap": "capture.pcap"
      },
      "hotkey": "Ctrl+Shift+C",
      "icon": "üì°",
      "description": "Captures network packets using tcpdump. Tcpdump is a powerful packet analyzer that can capture and analyze network traffic for debugging and security analysis."
    },
    {
      "id": "rclone-config",
      "name": "Rclone Configure",
      "command": "rclone config",
      "hotkey": "Ctrl+Shift+R",
      "icon": "‚öôÔ∏è",
      "description": "Opens the interactive configuration wizard for rclone. Rclone is a command line program to sync files and directories to and from cloud storage providers."
    },
    {
      "id": "rclone-sync",
      "name": "Rclone Sync",
      "command": "rclone sync [source] [remote:path]",
      "inputs": {
        "source": "./backup/",
        "remote:path": "gdrive:backups/"
      },
      "hotkey": "Ctrl+Shift+S",
      "icon": "üîÑ",
      "description": "Synchronizes files between local and remote storage using rclone. Sync makes the source and destination identical, deleting files in destination that don't exist in source."
    },
    {
      "id": "rclone-copy",
      "name": "Rclone Copy",
      "command": "rclone copy [source] [remote:path]",
      "inputs": {
        "source": "./documents/",
        "remote:path": "dropbox:documents/"
      },
      "hotkey": "Ctrl+Shift+C",
      "icon": "üìã",
      "description": "Copies files from source to destination using rclone. Copy only transfers new or changed files, preserving existing files in the destination."
    },
    {
      "id": "rclone-move",
      "name": "Rclone Move",
      "command": "rclone move [source] [remote:path]",
      "inputs": {
        "source": "./temp/",
        "remote:path": "s3:bucket/temp/"
      },
      "hotkey": "Ctrl+Shift+M",
      "icon": "üöö",
      "description": "Moves files from source to destination using rclone. Move transfers files and then deletes them from the source, useful for archiving or cleanup operations."
    },
    {
      "id": "rclone-ls",
      "name": "Rclone List Files",
      "command": "rclone ls [remote:path]",
      "inputs": {
        "remote:path": "gdrive:documents/"
      },
      "hotkey": "Ctrl+Shift+L",
      "icon": "üìã",
      "description": "Lists files in a remote storage location using rclone. Shows file sizes, modification dates, and paths for files stored in cloud storage."
    },
    {
      "id": "rclone-size",
      "name": "Rclone Directory Size",
      "command": "rclone size [remote:path]",
      "inputs": {
        "remote:path": "dropbox:photos/"
      },
      "hotkey": "Ctrl+Shift+S",
      "icon": "üìä",
      "description": "Calculates the total size of files in a remote directory using rclone. Useful for monitoring storage usage and planning backup strategies."
    },
    {
      "id": "rclone-mount",
      "name": "Rclone Mount",
      "command": "rclone mount [remote:path] [mount_point]",
      "inputs": {
        "remote:path": "gdrive:",
        "mount_point": "/mnt/gdrive"
      },
      "hotkey": "Ctrl+Shift+M",
      "icon": "üìÅ",
      "description": "Mounts a remote storage location as a local filesystem using rclone. Allows accessing cloud storage as if it were a local directory."
    },
    {
      "id": "rclone-backup",
      "name": "Rclone Backup",
      "command": "rclone sync [source] [remote:path] --backup-dir [backup_path]",
      "inputs": {
        "source": "/home/user/documents/",
        "remote:path": "gdrive:backups/documents/",
        "backup_path": "gdrive:backups/archive/"
      },
      "hotkey": "Ctrl+Shift+B",
      "icon": "üíæ",
      "description": "Creates a backup with versioning using rclone. The --backup-dir option moves deleted or changed files to a backup directory instead of deleting them."
    },
    {
      "id": "rclone-crypt",
      "name": "Rclone Encrypted Sync",
      "command": "rclone sync [source] [remote:crypt]",
      "inputs": {
        "source": "./sensitive/",
        "remote:crypt": "gdrive:crypt/"
      },
      "hotkey": "Ctrl+Shift+E",
      "icon": "üîê",
      "description": "Synchronizes files with encryption using rclone's crypt remote. Provides end-to-end encryption for sensitive data stored in cloud storage."
    },
    {
      "id": "rclone-check",
      "name": "Rclone Check",
      "command": "rclone check [source] [remote:path]",
      "inputs": {
        "source": "./backup/",
        "remote:path": "gdrive:backups/"
      },
      "hotkey": "Ctrl+Shift+C",
      "icon": "‚úÖ",
      "description": "Checks the integrity of files between source and destination using rclone. Compares file sizes and hashes to ensure data integrity."
    },
    {
      "id": "rclone-dedupe",
      "name": "Rclone Dedupe",
      "command": "rclone dedupe [remote:path]",
      "inputs": {
        "remote:path": "gdrive:documents/"
      },
      "hotkey": "Ctrl+Shift+D",
      "icon": "üßπ",
      "description": "Removes duplicate files from remote storage using rclone. Helps save storage space by identifying and removing duplicate files based on content."
    },
    {
      "id": "rclone-purge",
      "name": "Rclone Purge",
      "command": "rclone purge [remote:path]",
      "inputs": {
        "remote:path": "gdrive:temp/"
      },
      "hotkey": "Ctrl+Shift+X",
      "icon": "üóëÔ∏è",
      "description": "Completely removes a remote directory and all its contents using rclone. Use with caution as this operation cannot be undone."
    },
    {
      "id": "rclone-bisync",
      "name": "Rclone Bisync",
      "command": "rclone bisync [source] [remote:path]",
      "inputs": {
        "source": "./documents/",
        "remote:path": "dropbox:documents/"
      },
      "hotkey": "Ctrl+Shift+B",
      "icon": "üîÑ",
      "description": "Performs bidirectional synchronization between local and remote storage using rclone. Syncs changes in both directions, useful for collaborative work."
    }
  ]
}
