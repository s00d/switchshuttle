// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–∫–æ–Ω
export interface WindowConfig {
  id: string
  title: string
  icon: string
  component: string // –ò–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
  description?: string
  props?: Record<string, any> // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã
}

export const windowConfigs: WindowConfig[] = [
  {
    id: 'readme-window',
    title: 'Readme',
    icon: 'üìñ',
    component: 'ReadmeWindow',
    description: 'Documentation and guides'
  },
  {
    id: 'terminal-window',
    title: 'Terminal',
    icon: 'üíª',
    component: 'TerminalWindow',
    description: 'Command line interface',
    props: { command: '', output: '' }
  },
  {
    id: 'browser-window',
    title: 'Browser',
    icon: 'üåê',
    component: 'BrowserWindow',
    description: 'Web browser'
  },
  {
    id: 'galaxy-game-window',
    title: 'GalaxyGame',
    icon: 'üöÄ',
    component: 'GalaxyGameWindow',
    description: 'Space exploration game'
  },
  {
    id: 'help-window',
    title: 'Help',
    icon: '‚ùì',
    component: 'HelpWindow',
    description: 'Help and support'
  },
  {
    id: 'about-window',
    title: 'About',
    icon: '‚ÑπÔ∏è',
    component: 'AboutWindow',
    description: 'About SwitchShuttle'
  },
  {
    id: 'homepage-window',
    title: 'Homepage',
    icon: 'üè†',
    component: 'HomepageWindow',
    description: 'Official homepage'
  },
  {
    id: 'config-editor-window',
    title: 'ConfigEditor',
    icon: '‚öôÔ∏è',
    component: 'JsonEditorWindow',
    description: 'Configuration editor',
    props: { configFile: 'config.json' }
  },
  {
    id: 'config-folder-window',
    title: 'ConfigFolder',
    icon: 'üìÅ',
    component: 'ConfigFolderWindow',
    description: 'Configuration folder'
  },
  {
    id: 'calculator-window',
    title: 'Calculator',
    icon: 'üßÆ',
    component: 'CalculatorWindow',
    description: 'Calculator tool'
  },
  {
    id: 'music-player-window',
    title: 'MusicPlayer',
    icon: 'üéµ',
    component: 'MusicPlayerWindow',
    description: 'Music player'
  },
  {
    id: 'download-window',
    title: 'Download',
    icon: '‚¨áÔ∏è',
    component: 'DownloadWindow',
    description: 'Download SwitchShuttle'
  },
  {
    id: 'changelog-window',
    title: 'Changelog',
    icon: 'üìù',
    component: 'ChangelogWindow',
    description: 'Changelog and version history'
  },
  {
    id: 'notification-modal',
    title: 'Notification',
    icon: 'üîî',
    component: 'NotificationModal',
    description: 'Notification center',
    props: { title: '', message: '', show: true }
  }
]

// –°–æ–∑–¥–∞–µ–º Map –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –ø–æ ID
export const windowConfigMap = new Map<string, WindowConfig>(
  windowConfigs.map(config => [config.id, config])
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–∫–Ω–∞ –ø–æ ID
export function getWindowConfig(windowId: string): WindowConfig | undefined {
  return windowConfigMap.get(windowId)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–∫–Ω–µ –ø–æ ID
export function getWindowInfo(windowId: string) {
  const config = windowConfigMap.get(windowId)
  if (!config) {
    return { title: 'Unknown', icon: '‚ùì' }
  }
  return {
    title: config.title,
    icon: config.icon
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –æ–∫–æ–Ω
export function getAllWindowConfigs() {
  return windowConfigs
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ–∫–æ–Ω –¥–ª—è TaskBar
export function getTaskBarWindows() {
  return windowConfigs
    .filter(config => config.id !== 'notification-modal') // –ò—Å–∫–ª—é—á–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    .map(config => ({
      id: config.id,
      title: config.title,
      icon: config.icon
    }))
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ –ø–æ ID
export function createWindowConfig(windowId: string, customProps?: Record<string, any>) {
  const config = windowConfigMap.get(windowId)
  if (!config) {
    throw new Error(`Window ${windowId} not found`)
  }
  
  // –†–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–æ–ø—Å—ã –Ω–∞ —Ç–µ, —á—Ç–æ –∏–¥—É—Ç –≤ WindowInfo –∏ —Ç–µ, —á—Ç–æ –≤ props
  const { position, size, ...otherProps } = customProps || {}
  
  return {
    id: windowId,
    component: windowId,
    position,
    size,
    props: {
      windowId,
      title: config.title, // –ö–ª—é—á –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'windows.readme')
      ...config.props,
      ...otherProps
    }
  }
} 